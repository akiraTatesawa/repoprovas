// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  @@map("users")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  tests     Test[]

  @@map("categories")
}

model Term {
  id          Int          @id @default(autoincrement())
  number      Int          @unique
  createdAt   DateTime     @default(now())
  disciplines Discipline[]

  @@map("terms")
}

model Discipline {
  id                  Int                 @id @default(autoincrement())
  name                String              @unique
  term                Term                @relation(fields: [termId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  termId              Int
  createdAt           DateTime            @default(now())
  teachersDisciplines TeacherDiscipline[]

  @@map("disciplines")
}

model Teacher {
  id                  Int                 @id @default(autoincrement())
  name                String              @unique
  createdAt           DateTime            @default(now())
  teachersDisciplines TeacherDiscipline[]

  @@map("teachers")
}

model TeacherDiscipline {
  id           Int        @id @default(autoincrement())
  discipline   Discipline @relation(fields: [disciplineId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  disciplineId Int
  teacher      Teacher    @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  teacherId    Int
  Test         Test[]

  @@map("disciplines_teachers")
}

model Test {
  id                  Int               @id @default(autoincrement())
  name                String
  pdfUrl              String
  category            Category          @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  categoryId          Int
  teacherDiscipline   TeacherDiscipline @relation(fields: [teacherDisciplineId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  teacherDisciplineId Int

  @@map("tests")
}
